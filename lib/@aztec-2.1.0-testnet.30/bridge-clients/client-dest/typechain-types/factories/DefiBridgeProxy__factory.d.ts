import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DefiBridgeProxy, DefiBridgeProxyInterface } from "../DefiBridgeProxy";
declare type DefiBridgeProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DefiBridgeProxy__factory extends ContractFactory {
    constructor(...args: DefiBridgeProxyConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<DefiBridgeProxy>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): DefiBridgeProxy;
    connect(signer: Signer): DefiBridgeProxy__factory;
    static readonly contractName: "DefiBridgeProxy";
    readonly contractName: "DefiBridgeProxy";
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610574806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ffd8e7b714610030575b600080fd5b61004361003e36600461039f565b610064565b60408051938452602084019290925215159082015260600160405180910390f35b6000808060028b60400151600381111561008057610080610431565b1415610095576100958b602001518d896101e1565b60028a6040015160038111156100ad576100ad610431565b14156100c2576100c28a602001518d896101e1565b8b6001600160a01b0381166326c3b51560018e6040015160038111156100ea576100ea610431565b146100f65760006100f8565b895b8e8e8e8e8e8e8e60006040518a63ffffffff1660e01b815260040161012498979695949392919061048c565b60606040518083038185885af1158015610142573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101679190610500565b9195509350915081156101b45760008411806101835750600083115b156101af5760405163015d98b960e41b8152600481018590526024810184905260440160405180910390fd5b6101d1565b8c6101c28b868a848a610229565b6101cf8a858a848a610229565b505b5099509950999650505050505050565b60405163a9059cbb60e01b8152826004820152816024820152602060006044836000885af190506001600051163d1517808216610222573d6000803e3d6000fd5b5050505050565b60018560400151600381111561024157610241610431565b1415610282576000838152602082905260409020805490858214610278576040516365dfb76560e11b815260040160405180910390fd5b6000905550610222565b60028560400151600381111561029a5761029a610431565b1480156102a75750600084115b156102225761022285602001518330876040516323b872dd60e01b8152836004820152826024820152816044820152602060006064836000895af190506001600051163d15178082166102fe573d6000803e3d6000fd5b505050505050565b80356001600160a01b038116811461031d57600080fd5b919050565b60006060828403121561033457600080fd5b6040516060810181811067ffffffffffffffff8211171561036557634e487b7160e01b600052604160045260246000fd5b6040528235815290508061037b60208401610306565b602082015260408301356004811061039257600080fd5b6040919091015292915050565b60008060008060008060008060006102208a8c0312156103be57600080fd5b6103c78a610306565b98506103d68b60208c01610322565b97506103e58b60808c01610322565b96506103f48b60e08c01610322565b95506104048b6101408c01610322565b989b979a5095989497966101a086013596506101c0860135956101e0810135955061020001359350915050565b634e487b7160e01b600052602160045260246000fd5b805182526020808201516001600160a01b03169083015260408101516004811061048157634e487b7160e01b600052602160045260246000fd5b806040840152505050565b610200810161049b828b610447565b6104a8606083018a610447565b6104b560c0830189610447565b6104c3610120830188610447565b6101808201959095526101a081019390935267ffffffffffffffff919091166101c08301526001600160a01b03166101e090910152949350505050565b60008060006060848603121561051557600080fd5b83519250602084015191506040840151801515811461053357600080fd5b80915050925092509256fea2646970667358221220f05d58a931c6231e465184fff3863258919415fcdfe9572c046109559abbbe4f64736f6c634300080a0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        anonymous?: undefined;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: ({
            internalType: string;
            name: string;
            type: string;
            components?: undefined;
        } | {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        })[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): DefiBridgeProxyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DefiBridgeProxy;
}
export {};
//# sourceMappingURL=DefiBridgeProxy__factory.d.ts.map