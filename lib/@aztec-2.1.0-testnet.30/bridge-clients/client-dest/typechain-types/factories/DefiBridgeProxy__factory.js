"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefiBridgeProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "outputValueA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "outputValueB",
                type: "uint256",
            },
        ],
        name: "ASYNC_NONZERO_OUTPUT_VALUES",
        type: "error",
    },
    {
        inputs: [],
        name: "DEFI_BRIDGE_PROXY_TRANSFER_FAILED",
        type: "error",
    },
    {
        inputs: [],
        name: "INCORRECT_ASSET_VALUE",
        type: "error",
    },
    {
        inputs: [],
        name: "INSUFFICIENT_ETH_PAYMENT",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "bridgeId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalInputValue",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalOutputValueA",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalOutputValueB",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "result",
                type: "bool",
            },
        ],
        name: "AsyncDefiBridgeProcessed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "bridgeId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalInputValue",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalOutputValueA",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalOutputValueB",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "result",
                type: "bool",
            },
        ],
        name: "DefiBridgeProcessed",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "bridgeAddress",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "erc20Address",
                        type: "address",
                    },
                    {
                        internalType: "enum AztecTypes.AztecAssetType",
                        name: "assetType",
                        type: "uint8",
                    },
                ],
                internalType: "struct AztecTypes.AztecAsset",
                name: "inputAssetA",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "erc20Address",
                        type: "address",
                    },
                    {
                        internalType: "enum AztecTypes.AztecAssetType",
                        name: "assetType",
                        type: "uint8",
                    },
                ],
                internalType: "struct AztecTypes.AztecAsset",
                name: "inputAssetB",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "erc20Address",
                        type: "address",
                    },
                    {
                        internalType: "enum AztecTypes.AztecAssetType",
                        name: "assetType",
                        type: "uint8",
                    },
                ],
                internalType: "struct AztecTypes.AztecAsset",
                name: "outputAssetA",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "erc20Address",
                        type: "address",
                    },
                    {
                        internalType: "enum AztecTypes.AztecAssetType",
                        name: "assetType",
                        type: "uint8",
                    },
                ],
                internalType: "struct AztecTypes.AztecAsset",
                name: "outputAssetB",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "totalInputValue",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "interactionNonce",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "auxInputData",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "ethPaymentsSlot",
                type: "uint256",
            },
        ],
        name: "convert",
        outputs: [
            {
                internalType: "uint256",
                name: "outputValueA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "outputValueB",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "isAsync",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610574806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ffd8e7b714610030575b600080fd5b61004361003e36600461039f565b610064565b60408051938452602084019290925215159082015260600160405180910390f35b6000808060028b60400151600381111561008057610080610431565b1415610095576100958b602001518d896101e1565b60028a6040015160038111156100ad576100ad610431565b14156100c2576100c28a602001518d896101e1565b8b6001600160a01b0381166326c3b51560018e6040015160038111156100ea576100ea610431565b146100f65760006100f8565b895b8e8e8e8e8e8e8e60006040518a63ffffffff1660e01b815260040161012498979695949392919061048c565b60606040518083038185885af1158015610142573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101679190610500565b9195509350915081156101b45760008411806101835750600083115b156101af5760405163015d98b960e41b8152600481018590526024810184905260440160405180910390fd5b6101d1565b8c6101c28b868a848a610229565b6101cf8a858a848a610229565b505b5099509950999650505050505050565b60405163a9059cbb60e01b8152826004820152816024820152602060006044836000885af190506001600051163d1517808216610222573d6000803e3d6000fd5b5050505050565b60018560400151600381111561024157610241610431565b1415610282576000838152602082905260409020805490858214610278576040516365dfb76560e11b815260040160405180910390fd5b6000905550610222565b60028560400151600381111561029a5761029a610431565b1480156102a75750600084115b156102225761022285602001518330876040516323b872dd60e01b8152836004820152826024820152816044820152602060006064836000895af190506001600051163d15178082166102fe573d6000803e3d6000fd5b505050505050565b80356001600160a01b038116811461031d57600080fd5b919050565b60006060828403121561033457600080fd5b6040516060810181811067ffffffffffffffff8211171561036557634e487b7160e01b600052604160045260246000fd5b6040528235815290508061037b60208401610306565b602082015260408301356004811061039257600080fd5b6040919091015292915050565b60008060008060008060008060006102208a8c0312156103be57600080fd5b6103c78a610306565b98506103d68b60208c01610322565b97506103e58b60808c01610322565b96506103f48b60e08c01610322565b95506104048b6101408c01610322565b989b979a5095989497966101a086013596506101c0860135956101e0810135955061020001359350915050565b634e487b7160e01b600052602160045260246000fd5b805182526020808201516001600160a01b03169083015260408101516004811061048157634e487b7160e01b600052602160045260246000fd5b806040840152505050565b610200810161049b828b610447565b6104a8606083018a610447565b6104b560c0830189610447565b6104c3610120830188610447565b6101808201959095526101a081019390935267ffffffffffffffff919091166101c08301526001600160a01b03166101e090910152949350505050565b60008060006060848603121561051557600080fd5b83519250602084015191506040840151801515811461053357600080fd5b80915050925092509256fea2646970667358221220f05d58a931c6231e465184fff3863258919415fcdfe9572c046109559abbbe4f64736f6c634300080a0033";
const isSuperArgs = (xs) => xs.length > 1;
class DefiBridgeProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "DefiBridgeProxy";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DefiBridgeProxy__factory = DefiBridgeProxy__factory;
DefiBridgeProxy__factory.bytecode = _bytecode;
DefiBridgeProxy__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmaUJyaWRnZVByb3h5X19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdHlwZWNoYWluLXR5cGVzL2ZhY3Rvcmllcy9EZWZpQnJpZGdlUHJveHlfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbUNBQTZFO0FBTzdFLE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLGNBQWM7Z0JBQ3BCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxjQUFjO2dCQUNwQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLDZCQUE2QjtRQUNuQyxJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxtQ0FBbUM7UUFDekMsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLDBCQUEwQjtRQUNoQyxJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxPQUFPO2dCQUNiLElB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