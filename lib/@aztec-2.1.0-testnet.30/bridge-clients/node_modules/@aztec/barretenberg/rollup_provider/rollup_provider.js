"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.joinSplitTxFromJson = exports.joinSplitTxToJson = exports.accountTxFromJson = exports.accountTxToJson = exports.pendingTxFromJson = exports.pendingTxToJson = exports.rollupProviderStatusFromJson = exports.rollupProviderStatusToJson = exports.runtimeConfigFromJson = exports.runtimeConfigToJson = exports.txFromJson = exports.txToJson = exports.DefiSettlementTime = exports.TxSettlementTime = void 0;
const blockchain_1 = require("../blockchain");
const bridge_id_1 = require("../bridge_id");
const client_proofs_1 = require("../client_proofs");
const offchain_tx_data_1 = require("../offchain_tx_data");
const tx_id_1 = require("../tx_id");
var TxSettlementTime;
(function (TxSettlementTime) {
    TxSettlementTime[TxSettlementTime["NEXT_ROLLUP"] = 0] = "NEXT_ROLLUP";
    TxSettlementTime[TxSettlementTime["INSTANT"] = 1] = "INSTANT";
})(TxSettlementTime = exports.TxSettlementTime || (exports.TxSettlementTime = {}));
var DefiSettlementTime;
(function (DefiSettlementTime) {
    DefiSettlementTime[DefiSettlementTime["DEADLINE"] = 0] = "DEADLINE";
    DefiSettlementTime[DefiSettlementTime["NEXT_ROLLUP"] = 1] = "NEXT_ROLLUP";
    DefiSettlementTime[DefiSettlementTime["INSTANT"] = 2] = "INSTANT";
})(DefiSettlementTime = exports.DefiSettlementTime || (exports.DefiSettlementTime = {}));
const txToJson = ({ proofData, offchainTxData, depositSignature }) => ({
    proofData: proofData.toString('hex'),
    offchainTxData: offchainTxData.toString('hex'),
    depositSignature: depositSignature ? depositSignature.toString('hex') : undefined,
});
exports.txToJson = txToJson;
const txFromJson = ({ proofData, offchainTxData, depositSignature }) => ({
    proofData: Buffer.from(proofData, 'hex'),
    offchainTxData: Buffer.from(offchainTxData, 'hex'),
    depositSignature: depositSignature ? Buffer.from(depositSignature, 'hex') : undefined,
});
exports.txFromJson = txFromJson;
function runtimeConfigToJson(runtimeConfig) {
    return {
        ...runtimeConfig,
        maxFeeGasPrice: runtimeConfig.maxFeeGasPrice.toString(),
        maxProviderGasPrice: runtimeConfig.maxProviderGasPrice.toString(),
    };
}
exports.runtimeConfigToJson = runtimeConfigToJson;
function runtimeConfigFromJson(runtimeConfig) {
    const { maxFeeGasPrice, maxProviderGasPrice } = runtimeConfig;
    return {
        ...runtimeConfig,
        ...(maxFeeGasPrice !== undefined ? { maxFeeGasPrice: BigInt(maxFeeGasPrice) } : {}),
        ...(maxProviderGasPrice !== undefined ? { maxProviderGasPrice: BigInt(maxProviderGasPrice) } : {}),
    };
}
exports.runtimeConfigFromJson = runtimeConfigFromJson;
function rollupProviderStatusToJson(status) {
    return {
        ...status,
        blockchainStatus: (0, blockchain_1.blockchainStatusToJson)(status.blockchainStatus),
        bridgeStatus: status.bridgeStatus.map(bridge_id_1.bridgeStatusToJson),
        runtimeConfig: runtimeConfigToJson(status.runtimeConfig),
    };
}
exports.rollupProviderStatusToJson = rollupProviderStatusToJson;
function rollupProviderStatusFromJson(status) {
    const { blockchainStatus, nextPublishTime, runtimeConfig, bridgeStatus, ...rest } = status;
    return {
        ...rest,
        blockchainStatus: (0, blockchain_1.blockchainStatusFromJson)(blockchainStatus),
        nextPublishTime: new Date(nextPublishTime),
        runtimeConfig: runtimeConfigFromJson(runtimeConfig),
        bridgeStatus: bridgeStatus.map(bridge_id_1.bridgeStatusFromJson),
    };
}
exports.rollupProviderStatusFromJson = rollupProviderStatusFromJson;
const pendingTxToJson = ({ txId, noteCommitment1, noteCommitment2 }) => ({
    txId: txId.toString(),
    noteCommitment1: noteCommitment1.toString('hex'),
    noteCommitment2: noteCommitment2.toString('hex'),
});
exports.pendingTxToJson = pendingTxToJson;
const pendingTxFromJson = ({ txId, noteCommitment1, noteCommitment2 }) => ({
    txId: tx_id_1.TxId.fromString(txId),
    noteCommitment1: Buffer.from(noteCommitment1, 'hex'),
    noteCommitment2: Buffer.from(noteCommitment2, 'hex'),
});
exports.pendingTxFromJson = pendingTxFromJson;
const accountTxToJson = ({ proofData, offchainTxData }) => ({
    proofData: proofData.proofData.rawProofData.toString('hex'),
    offchainTxData: offchainTxData.toBuffer().toString('hex'),
});
exports.accountTxToJson = accountTxToJson;
const accountTxFromJson = ({ proofData, offchainTxData }) => ({
    proofData: client_proofs_1.AccountProofData.fromBuffer(Buffer.from(proofData, 'hex')),
    offchainTxData: offchain_tx_data_1.OffchainAccountData.fromBuffer(Buffer.from(offchainTxData, 'hex')),
});
exports.accountTxFromJson = accountTxFromJson;
const joinSplitTxToJson = ({ proofData, offchainTxData }) => ({
    proofData: proofData.proofData.rawProofData.toString('hex'),
    offchainTxData: offchainTxData.toBuffer().toString('hex'),
});
exports.joinSplitTxToJson = joinSplitTxToJson;
const joinSplitTxFromJson = ({ proofData, offchainTxData }) => ({
    proofData: client_proofs_1.JoinSplitProofData.fromBuffer(Buffer.from(proofData, 'hex')),
    offchainTxData: offchain_tx_data_1.OffchainJoinSplitData.fromBuffer(Buffer.from(offchainTxData, 'hex')),
});
exports.joinSplitTxFromJson = joinSplitTxFromJson;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9sbHVwX3Byb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JvbGx1cF9wcm92aWRlci9yb2xsdXBfcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsOENBQW1HO0FBRW5HLDRDQUFnRztBQUNoRyxvREFBd0U7QUFDeEUsMERBQWlGO0FBQ2pGLG9DQUFnQztBQUVoQyxJQUFZLGdCQUdYO0FBSEQsV0FBWSxnQkFBZ0I7SUFDMUIscUVBQVcsQ0FBQTtJQUNYLDZEQUFPLENBQUE7QUFDVCxDQUFDLEVBSFcsZ0JBQWdCLEdBQWhCLHdCQUFnQixLQUFoQix3QkFBZ0IsUUFHM0I7QUFFRCxJQUFZLGtCQUlYO0FBSkQsV0FBWSxrQkFBa0I7SUFDNUIsbUVBQVEsQ0FBQTtJQUNSLHlFQUFXLENBQUE7SUFDWCxpRUFBTyxDQUFBO0FBQ1QsQ0FBQyxFQUpXLGtCQUFrQixHQUFsQiwwQkFBa0IsS0FBbEIsMEJBQWtCLFFBSTdCO0FBY00sTUFBTSxRQUFRLEdBQUcsQ0FBQyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQU0sRUFBVSxFQUFFLENBQUMsQ0FBQztJQUN4RixTQUFTLEVBQUUsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7SUFDcEMsY0FBYyxFQUFFLGNBQWMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO0lBQzlDLGdCQUFnQixFQUFFLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7Q0FDbEYsQ0FBQyxDQUFDO0FBSlUsUUFBQSxRQUFRLFlBSWxCO0FBRUksTUFBTSxVQUFVLEdBQUcsQ0FBQyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQVUsRUFBTSxFQUFFLENBQUMsQ0FBQztJQUMxRixTQUFTLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO0lBQ3hDLGNBQWMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUM7SUFDbEQsZ0JBQWdCLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7Q0FDdEYsQ0FBQyxDQUFDO0FBSlUsUUFBQSxVQUFVLGNBSXBCO0FBa0JILFNBQWdCLG1CQUFtQixDQUFDLGFBQTRCO0lBQzlELE9BQU87UUFDTCxHQUFHLGFBQWE7UUFDaEIsY0FBYyxFQUFFLGFBQWEsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFO1FBQ3ZELG1CQUFtQixFQUFFLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLEVBQUU7S0FDbEUsQ0FBQztBQUNKLENBQUM7QUFORCxrREFNQztBQUVELFNBQWdCLHFCQUFxQixDQUFDLGFBQWtCO0lBQ3RELE1BQU0sRUFBRSxjQUFjLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxhQUFhLENBQUM7SUFDOUQsT0FBTztRQUNMLEdBQUcsYUFBYTtRQUNoQixHQUFHLENBQUMsY0FBYyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxjQUFjLEVBQUUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNuRixHQUFHLENBQUMsbUJBQW1CLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztLQUNuRyxDQUFDO0FBQ0osQ0FBQztBQVBELHNEQU9DO0FBZ0JELFNBQWdCLDBCQUEwQixDQUFDLE1BQTRCO0lBQ3JFLE9BQU87UUFDTCxHQUFHLE1BQU07UUFDVCxnQkFBZ0IsRUFBRSxJQUFBLG1DQUFzQixFQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztRQUNqRSxZQUFZLEVBQUUsTUFBTSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsOEJBQWtCLENBQUM7UUFDekQsYUFBYSxFQUFFLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7S0FDekQsQ0FBQztBQUNKLENBQUM7QUFQRCxnRUFPQztBQUVELFNBQWdCLDRCQUE0QixDQUFDLE1BQVc7SUFDdEQsTUFBTSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLEdBQUcsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDO0lBQzNGLE9BQU87UUFDTCxHQUFHLElBQUk7UUFDUCxnQkFBZ0IsRUFBRSxJQUFBLHFDQUF3QixFQUFDLGdCQUFnQixDQUFDO1FBQzVELGVBQWUsRUFBRSxJQUFJLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDMUMsYUFBYSxFQUFFLHFCQUFxQixDQUFDLGFBQWEsQ0FBQztRQUNuRCxZQUFZLEVBQUUsWUFBWSxDQUFDLEdBQUcsQ0FBQyxnQ0FBb0IsQ0FBQztLQUNyRCxDQUFDO0FBQ0osQ0FBQztBQVRELG9FQVNDO0FBY00sTUFBTSxlQUFlLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFhLEVBQWlCLEVBQUUsQ0FBQyxDQUFDO0lBQ3hHLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFO0lBQ3JCLGVBQWUsRUFBRSxlQUFlLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUNoRCxlQUFlLEVBQUUsZUFBZSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7Q0FDakQsQ0FBQyxDQUFDO0FBSlUsUUFBQSxlQUFlLG1CQUl6QjtBQUVJLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFpQixFQUFhLEVBQUUsQ0FBQyxDQUFDO0lBQzFHLElBQUksRUFBRSxZQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztJQUMzQixlQUFlLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDO0lBQ3BELGVBQWUsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxLQUFLLENBQUM7Q0FDckQsQ0FBQyxDQUFDO0FBSlUsUUFBQSxpQkFBaUIscUJBSTNCO0FBZ0JJLE1BQU0sZUFBZSxHQUFHLENBQUMsRUFBRSxTQUFTLEVBQUUsY0FBYyxFQUFhLEVBQWlCLEVBQUUsQ0FBQyxDQUFDO0lBQzNGLFNBQVMsRUFBRSxTQUFTLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO0lBQzNELGNBQWMsRUFBRSxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztDQUMxRCxDQUFDLENBQUM7QUFIVSxRQUFBLGVBQWUsbUJBR3pCO0FBRUksTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEVBQUUsU0FBUyxFQUFFLGNBQWMsRUFBaUIsRUFBYSxFQUFFLENBQUMsQ0FBQztJQUM3RixTQUFTLEVBQUUsZ0NBQWdCLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3JFLGNBQWMsRUFBRSxzQ0FBbUIsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsS0FBSyxDQUFDLENBQUM7Q0FDbkYsQ0FBQyxDQUFDO0FBSFUsUUFBQSxpQkFBaUIscUJBRzNCO0FBWUksTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEVBQUUsU0FBUyxFQUFFLGNBQWMsRUFBZSxFQUFtQixFQUFFLENBQUMsQ0FBQztJQUNqRyxTQUFTLEVBQUUsU0FBUyxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUMzRCxjQUFjLEVBQUUsY0FBYyxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7Q0FDMUQsQ0FBQyxDQUFDO0FBSFUsUUFBQSxpQkFBaUIscUJBRzNCO0FBRUksTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEVBQUUsU0FBUyxFQUFFLGNBQWMsRUFBbUIsRUFBZSxFQUFFLENBQUMsQ0FBQztJQUNuRyxTQUFTLEVBQUUsa0NBQWtCLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZFLGNBQWMsRUFBRSx3Q0FBcUIsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsS0FBSyxDQUFDLENBQUM7Q0FDckYsQ0FBQyxDQUFDO0FBSFUsUUFBQSxtQkFBbUIsdUJBRzdCIn0=