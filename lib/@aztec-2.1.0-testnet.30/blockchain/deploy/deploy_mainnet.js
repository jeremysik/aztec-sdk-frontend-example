"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deployMainnet = void 0;
const deployers_1 = require("./deployers");
const gasLimit = 5000000;
const escapeBlockLower = 2160;
const escapeBlockUpper = 2400;
const MULTI_SIG_ADDRESS = '0xE298a76986336686CC3566469e3520d23D1a8aaD';
const DAI_ADDRESS = '0x6b175474e89094c44da98b954eedeac495271d0f';
const LIDO_WSTETH_ADDRESS = '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0';
const UNISWAP_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';
const DAI_PRICE_FEED_ADDRESS = '0x773616E4d11A78F511299002da57A0a94577F1f4';
const FAST_GAS_PRICE_FEED_ADDRESS = '0x169e633a2d1e6c10dd91238ba11c4a708dfef37c';
async function deployMainnet(signer, { dataTreeSize, roots }, vk) {
    const verifier = vk ? await (0, deployers_1.deployVerifier)(signer, vk) : await (0, deployers_1.deployMockVerifier)(signer);
    const defiProxy = await (0, deployers_1.deployDefiBridgeProxy)(signer);
    const rollup = await (0, deployers_1.deployRollupProcessor)(signer, verifier, defiProxy, escapeBlockLower, escapeBlockUpper, roots.dataRoot, roots.nullRoot, roots.rootsRoot, dataTreeSize, false);
    const feeDistributor = await (0, deployers_1.deployFeeDistributor)(signer, rollup, UNISWAP_ROUTER_ADDRESS);
    await rollup.setSupportedAsset(DAI_ADDRESS, 0, { gasLimit });
    await rollup.setSupportedAsset(LIDO_WSTETH_ADDRESS, 0, { gasLimit });
    const expiryCutOff = new Date('01 Sept 2022 00:00:00 GMT');
    await (0, deployers_1.deployElementBridge)(signer, rollup, ['dai'], expiryCutOff);
    await (0, deployers_1.deployLidoBridge)(signer, rollup);
    await rollup.transferOwnership(MULTI_SIG_ADDRESS, { gasLimit });
    const priceFeeds = [FAST_GAS_PRICE_FEED_ADDRESS, DAI_PRICE_FEED_ADDRESS];
    return { rollup, priceFeeds, feeDistributor };
}
exports.deployMainnet = deployMainnet;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95X21haW5uZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGVwbG95L2RlcGxveV9tYWlubmV0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLDJDQVFxQjtBQUVyQixNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFDekIsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7QUFDOUIsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7QUFFOUIsTUFBTSxpQkFBaUIsR0FBRyw0Q0FBNEMsQ0FBQztBQUN2RSxNQUFNLFdBQVcsR0FBRyw0Q0FBNEMsQ0FBQztBQUNqRSxNQUFNLG1CQUFtQixHQUFHLDRDQUE0QyxDQUFDO0FBQ3pFLE1BQU0sc0JBQXNCLEdBQUcsNENBQTRDLENBQUM7QUFDNUUsTUFBTSxzQkFBc0IsR0FBRyw0Q0FBNEMsQ0FBQztBQUM1RSxNQUFNLDJCQUEyQixHQUFHLDRDQUE0QyxDQUFDO0FBRTFFLEtBQUssVUFBVSxhQUFhLENBQUMsTUFBYyxFQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBZ0IsRUFBRSxFQUFXO0lBQ3BHLE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFBLDBCQUFjLEVBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUEsOEJBQWtCLEVBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUYsTUFBTSxTQUFTLEdBQUcsTUFBTSxJQUFBLGlDQUFxQixFQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3RELE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBQSxpQ0FBcUIsRUFDeEMsTUFBTSxFQUNOLFFBQVEsRUFDUixTQUFTLEVBQ1QsZ0JBQWdCLEVBQ2hCLGdCQUFnQixFQUNoQixLQUFLLENBQUMsUUFBUSxFQUNkLEtBQUssQ0FBQyxRQUFRLEVBQ2QsS0FBSyxDQUFDLFNBQVMsRUFDZixZQUFZLEVBQ1osS0FBSyxDQUNOLENBQUM7SUFDRixNQUFNLGNBQWMsR0FBRyxNQUFNLElBQUEsZ0NBQW9CLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO0lBRTFGLE1BQU0sTUFBTSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQzdELE1BQU0sTUFBTSxDQUFDLGlCQUFpQixDQUFDLG1CQUFtQixFQUFFLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFFckUsTUFBTSxZQUFZLEdBQUcsSUFBSSxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQztJQUMzRCxNQUFNLElBQUEsK0JBQW1CLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2pFLE1BQU0sSUFBQSw0QkFBZ0IsRUFBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFFdkMsTUFBTSxNQUFNLENBQUMsaUJBQWlCLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBRWhFLE1BQU0sVUFBVSxHQUFHLENBQUMsMkJBQTJCLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztJQUV6RSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsQ0FBQztBQUNoRCxDQUFDO0FBN0JELHNDQTZCQyJ9